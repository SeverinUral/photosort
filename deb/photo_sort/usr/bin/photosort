#! /usr/bin/python3
# -*- coding utf-8 -*-
# (c) 2022 Fomenko A V
# v 2.0-1


import os
import shutil
import subprocess
import configparser
from datetime import *
from os.path import join, isfile, splitext

try:
    import exifread
except Exception as e:
    print("{}\nInstall module 'exifread', use 'pip install exifread'".format(e))
    exit()

CONFIG_DIR = join(os.environ['HOME'], ".config/photosort")
CONFIG_FILE = join(os.environ['HOME'], ".config/photosort/config.conf")


def check_config_file():
    if isfile(CONFIG_FILE):
        return True

    config = configparser.ConfigParser()
    config['Main'] = {"path_to_save": join(os.environ['HOME'], "Photo")}

    os.makedirs(CONFIG_DIR, exist_ok=True)
    with open(CONFIG_FILE, 'w') as configfile:
        config.write(configfile)

    print("Default config are create now!")
    ans = input("Continue? (y/n)\n")

    if ans.lower() == 'y':
        return True

    return False


def read_conf():
    config = configparser.ConfigParser()
    config.read(CONFIG_FILE)
    return config["Main"].get('path_to_save')


def main():
    # check config file, if not exist it will create at startup
    if not check_config_file():
        return

    # absolute path to src image folder
    fPath = os.curdir

    # absolute path to Photo storage folder
    pht = join(read_conf(), '{}/{} {}')

    # counter
    i = 0

    # from str to DateTime parse patterns
    patern = "%Y:%m:%d %H:%M:%S"
    # patern2 = "UTC %Y-%m-%d %H:%M:%S " #2023-07-21 09:13:09 UTC
    patern2 = "%Y-%m-%d %H:%M:%S UTC "  # 2023-07-21 09:13:09 UTC
    jpeg_mime = [".jpg", ".jfif", ".jpe", ".jpeg"]
    mp4_mime = [".mp4"]

    # iteration of all files in src folder
    for f in os.listdir(fPath):
        # absolute path to file

        file_path = join(fPath, f)

        if isfile(file_path) and splitext(file_path)[-1].lower() in jpeg_mime:
            # IMG files
            try:
                # EXIF tags
                tags_EXIF = {}

                # reading EXIF tags
                with open(file_path, 'rb') as img_file:
                    tags_EXIF = exifread.process_file(img_file)

                # parse date from EXIF info
                s = str(tags_EXIF.get("Image DateTime"))
                d = datetime.strptime(s, patern)
            except:
                pass

        # TODO
        # replace subprocess and mediainfo to pymediainfo
        # https://pypi.org/project/pymediainfo/
        if isfile(file_path) and splitext(file_path)[-1].lower() in mp4_mime:
            # Video files
            try:
                cmd = ['mediainfo',
                       '--Inform=General;"%Tagged_Date%"',
                       file_path]

                s = subprocess.run(cmd,
                                   stdout=subprocess.PIPE,
                                   text=True).stdout

                d = datetime.strptime(s, patern2)
            except:
                pass
        # end TODO

        try:
            full_path = pht.format(d.year, d.month, datetime.strftime(d, "%B"))
        except:
            pass
        else:
            os.makedirs(full_path, exist_ok=True)

            try:
                shutil.move(file_path, full_path)
                print("File {} are moved".format(f))
                i += 1
            except Exception as e:
                print("File {} are not moved. {}".format(f, e))

        d = None

    print(i)
    return(0)


if __name__ == '__main__':
    main()
